* Format
** Description
   A function that prints a string while substituting format options with their respective arguments

** Prototype
  /int _printf(const char *format, ...);/
  E.g: printf("abc%d", 123) >> "abc123"

** Format Options
  /%[flags][width][.precision][length]specifier/
  Parameters between [...] are optional.

* Specification

** Specifiers
+------------+---------------------------------------+--------------+
| Specifier  | Meaning                               | Examples     |
+------------+---------------------------------------+--------------+
| d          | integer (base 10)                     |"%d" of 5 >>  |
|            |                                       |"5"           |
+------------+---------------------------------------+--------------+
| i          | integer                               |"%i" of 5 >>  |
|            |                                       |"5"           |
+------------+---------------------------------------+--------------+
| c          | ascii character                       |"%c" of 48    |
|            |                                       |>> '0'        |
+------------+---------------------------------------+--------------+
| s          | string of characters                  |"%d" of 10    |
|            |                                       |>> "1"        |
+------------+---------------------------------------+--------------+
| b          | binary                                |"%b" of 4 >>  |
|            |                                       |"100"         |
+------------+---------------------------------------+--------------+
| u          | unsigned integer                      |"%u" of 4 >>  |
|            |                                       |"4            |
+------------+---------------------------------------+--------------+
| o          | octal (base 8)                        |"%o" of 5 >>  |
|            |                                       |"5"           |
+------------+---------------------------------------+--------------+
| x          | lowercase hexadecimal (base 16)       |"%x" of 10    |
|            |                                       |>> a          |
+------------+---------------------------------------+--------------+
| X          | uppercase hexadecimal (base 16)       |"%X" of 10    |
|            |                                       |>> A          |
+------------+---------------------------------------+--------------+
| S          | prints non-printable asii characters  |"%S" of '\n'  |
|            |as \xx                                 |>> "\10"      |
+------------+---------------------------------------+--------------+
| p          | Pointer                               |"%p" of &b >> |
|            |                                       |"0x1234567891"|
|            |                                       |              |
+------------+---------------------------------------+--------------+
| r          | reversed string                       |"%p" of "abc" |
|            |                                       |>> "bca"      |
+------------+---------------------------------------+--------------+
| R          | rot-13'd string                       |"%R" of "abc" |
|            |                                       |>> "nop"      |
+------------+---------------------------------------+--------------+
															  

** Flags
+------------+---------------------------------------+--------------+
|    Flag    | Meaning                               | Examples     |
+------------+---------------------------------------+--------------+
| +          |Forces sign on integers, dosn't work on|"%+d" of 5 >> |
|            |          unsigned specifiers          |"+5"          |
+------------+---------------------------------------+--------------+
|   Space    | If no sign would be printed, then     |"% d" of 5 >> |
|            |print a space in it's place            |" 5"          |
|            |                                       |              |
+------------+---------------------------------------+--------------+
| \#         | Shows decimal point for float         |"%#x" of 5 >> |
|            |specifiers, "0x" for hexadeimals, "0"  |"0x5"         |
|            |for octal                              |              |
|            |                                       |              |
+------------+---------------------------------------+--------------+
| 0          | Pads with 0's                         |"%04d" of 4 >>|
|            |                                       |"0004"        |
+------------+---------------------------------------+--------------+
| -          | Left aligns string                    |"%2d" of 5 >> |
|            |                                       |"5 "          |
+------------+---------------------------------------+--------------+

** Length Modifiers
+------------+---------------------------------------+--------------+
|  Modifier  |                Meaning                |   Examples   |
+------------+---------------------------------------+--------------+
| l          |Treat arguments as *long*              |"%lx" of      |
|            |                                       |0xFF00FF00FF  |
|            |                                       |>>            |
|            |                                       |"0xFF00FF00FF"|
+------------+---------------------------------------+--------------+
| h          |Treat argument as *short*              |"%hx" of      |
|            |                                       |0xFF00FF00FF  |
|            |                                       |>> "0xFF00"   |
+------------+---------------------------------------+--------------+


** Width
+------------+---------------------------------------+--------------+
|   Width    |                Meaning                |   Examples   |
+------------+---------------------------------------+--------------+
|   number   |Specifies the minumum width. Extra     |"%2d" of 5 >> |
|            |slots are padded with spaces of 0's if |" 5"          |
|            |the `0` flag is used                   |              |
|            |                                       |              |
|            |                                       |              |
|            |                                       |              |
|            |                                       |              |
|            |                                       |              |
|            |                                       |              |
+------------+---------------------------------------+--------------+
| \*         |The next argument is used as the width |"%*d" of 3, 5 |
|            |                                       |is the same as|
|            |                                       |"%3d" of 5    |
+------------+---------------------------------------+--------------+

** Precision
+------------+---------------------------------------+--------------+
| Precision  | Meaning                               | Examples     |
+------------+---------------------------------------+--------------+
| .number    |Specifies the minimum digits for       |".3d" of 5 >> |
|            |`d,i,u,x,X,o`, and decimal places for  |"005"         |
|            |floating point specifiers              |              |
+------------+---------------------------------------+--------------+
| .*         |The next argument is taken as the      |".*d" of 3,5  |
|            |precision                              |is the same as|
|            |                                       |".3d" of 5    |
|            |                                       |              |
+------------+---------------------------------------+--------------+


#+BEGIN_SRC C
#include <stdio.h>

int main()
{
    printf("[%05.13u]", 4);
    return 0;
}
#+END_SRC

#+RESULTS:
: [0000000000004]
